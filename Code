globals [burning-history time total-burnt]

patches-own [
  state ; 0 = unburnt, 1 = burning, 2 = burnt
  cooldown ; Tracks the smoldering
  intensity ; Tracks fire intensity for burning patches
  burn-timer ; Tracks for how long a patch is burning
]

to setup ;;Setup procedure for the simulation
  clear-all
  set time 0
  set burning-history []
  set total-burnt 0
  ; Initialize the forest and empty patches
  ask patches [
    ifelse random-float 100 < tree [
      set pcolor green
      set state 0 ; Tree state
      set intensity 0
      set burn-timer 0
    ] [
      set pcolor brown
      set state -1 ; Non-flammable empty space
    ]
  ]
  ; Add rivers to avoid fire
  ask patches [
    if random-float 100 < river and pxcor != 0 and pycor != 0 [
      set pcolor blue ; River color
      set state -1 ; River patches are unburnable
    ]
  ]
  ; Start fire at the center of the forest
  ask patch 0 0 [
    set state 1
    set pcolor red
    set burn-timer 0
  ]

  if count patches with [state = 1] = 0 [
    user-message "No burning patch initialized. Please adjust tree density or setup logic."
    stop
  ]

  ; Ensure there are enough trees
  if count patches with [state = 0] = 0 [
    user-message "No trees available to burn. Please increase tree density."
    stop
  ]

  ; Add wind arrows
  setup-wind-arrows
  reset-ticks
end

to go
  wait 0.1 ; Slow down the simulation for better visualization

  ; Stop simulation if no patches are burning
  if count patches with [state = 1] = 0 [
    print (word "Simulation ended at time: " ticks)
    stop
  ]

  ; Track burning history for predictions
  set burning-history lput count patches with [state = 1] burning-history

  ; Update trees plot
  set-current-plot "Trees Available"
  set-current-plot-pen "Available Trees"
  plot count patches with [state = 0]

  set-current-plot "Trees Burnt"
  set-current-plot-pen "Trees Burnt"
  plot count patches with [state = 2]


  ; Add smoke effect
  add-smoke

  ; Highlight possible spread areas
  ask patches with [state = 1] [
    ask neighbors [
      if state = 0 [
        set pcolor orange ; Highlight possible fire spread
      ]
    ]
  ]

  ; Update smoldering and burnt patches
  ask patches with [state = 2] [
    ifelse cooldown > 0 [
      set cooldown cooldown - 1
      set pcolor gray ; Smoldering phase
    ] [
      set pcolor black ; Fully burnt
    ]
  ]

  ; Spread fire and handle intensity
  ask patches with [state = 1] [
    set burn-timer burn-timer + 1 ; Increment burn timer
    if burn-timer >= 5 and not any? neighbors with [state = 1] [
      set state 2 ; Burnt
      set pcolor black
    ]
    set intensity intensity + 1 ; Increase intensity
    if intensity > 10 [ set intensity 10 ] ; Cap intensity
    set pcolor red + intensity ; Gradual fire intensity
    set state 2 ; Transition to smoldering
    set cooldown 5 ; Smoldering time duration
    set total-burnt total-burnt + 1 ; Update total burnt area
    ask neighbors [
      let adjusted-probability fire-probability
      ; Adjust probability based on wind direction and speed
      if wind-direction = 0 [ ; North
        if pycor > [pycor] of myself [
          set adjusted-probability fire-probability * wind-speed
        ]
      ]
      if wind-direction = 1 [ ; East
        if pxcor > [pxcor] of myself [
          set adjusted-probability fire-probability * wind-speed
        ]
      ]
      if wind-direction = 2 [ ; South
        if pycor < [pycor] of myself [
          set adjusted-probability fire-probability * wind-speed
        ]
      ]
      if wind-direction = 3 [ ; West
        if pxcor < [pxcor] of myself [
          set adjusted-probability fire-probability * wind-speed
        ]
      ]
      ; Cooling effect near rivers
      if any? neighbors with [pcolor = blue] [
        set adjusted-probability adjusted-probability * 0.5
      ]
      ; Ignite unburnt neighbors based on adjusted probability
      if state = 0 and random-float 100 < adjusted-probability [
        set state 1
        set intensity 1
        set pcolor red + 1
        set burn-timer 0 ; Reset burn timer on fire spread
      ]
    ]
  ]

  ; Simulate time-based dimming
  set time time + 1
  let brightness max (list 0 (100 - time / 2))
  ask patches [
    if state = 0 [ set pcolor scale-color green brightness 0 100 ]
  ]

  ; Regrow trees
  regrow-trees

  ; Update wind arrows
  ask turtles with [shape = "arrow"] [
    set heading wind-direction * 90
  ]

  tick ; Advance the simulation time
end

to setup-wind-arrows ;;setup wind arrows procedure
  ask patches [
    if pxcor mod 5 = 0 and pycor mod 5 = 0 [ ; Place arrows
      sprout 1 [
        set shape "arrow"
        set color white
        set heading wind-direction * 90 ; Align arrows with wind direction
        set size 1
      ]
    ]
  ]
end

to add-smoke ;;add smoke procedure
  ask patches with [state = 1] [
    sprout 1 [
      set shape "circle"
      set color gray
      set size random-float 2
      set heading 90 ; Smoke moves upward
    ]
  ]
  ask turtles with [color = gray] [
    set size size - 0.1
    set ycor ycor + 0.1 ; Move upward
    if size <= 0 [ die ] ; Remove faded smoke
  ]
end

to regrow-trees ;;regrow trees procedure
  ask patches with [state = 2] [
    if random-float 100 < 5 [ ; Adjust regrowth rate as needed
      set state 0
      set pcolor green
    ]
  ]
end
